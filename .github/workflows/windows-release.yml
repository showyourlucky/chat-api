name: Windows Release
permissions:
  contents: write # 需要 write 权限来推送标签和创建 Release

on:
  # 保留原有的 tag push 触发器
  push:
    tags:
      - '*'        # 匹配所有 tag
      - '!*-alpha*' # 排除以 -alpha 结尾的 tag
  # 新增手动触发器
  workflow_dispatch:
    inputs:
      tag_name:
        description: '要创建并发布的 Tag 名称 (例如: v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 获取所有历史记录，以便 git describe 和 tag 创建能正常工作

      # --- 新增步骤：仅在手动触发时创建并推送 Tag ---
      - name: Create and Push Tag (Manual Trigger Only)
        if: github.event_name == 'workflow_dispatch' # 仅在手动触发时运行
        run: |
          echo "手动触发，创建并推送 Tag: ${{ github.event.inputs.tag_name }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ github.event.inputs.tag_name }} -m "Release ${{ github.event.inputs.tag_name }}"
          git push origin ${{ github.event.inputs.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # --- 结束新增步骤 ---

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Build Frontend
        env:
          CI: ""
        run: |
          # git describe --tags 会获取最近的 tag，无论是推送触发的还是手动创建推送的
          VERSION=$(git describe --tags)
          echo "使用版本: $VERSION"
          cd web-admin
          npm install
          REACT_APP_VERSION=$VERSION npm run build
          cd ..
          cd web-user
          npm install
          REACT_APP_VERSION=$VERSION npm run build
          cd ..

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'

      - name: Build Backend
        run: |
          # git describe --tags 同上
          VERSION=$(git describe --tags)
          echo "使用版本: $VERSION"
          go mod download
          go build -ldflags "-s -w -X 'chat-api/common.Version=$VERSION'" -o chat-api.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        # 修改条件：在 tag push 或 手动触发时都运行
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        with:
          files: chat-api.exe
          draft: true
          generate_release_notes: true
          # 明确指定 tag_name，根据触发方式选择
          # 如果是手动触发，使用输入的 tag_name；否则（即 tag push 触发），使用 github.ref_name
          tag_name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag_name || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

